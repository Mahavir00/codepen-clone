{"version":3,"sources":["hooks/useLocalStorage.js","components/Editor.js","components/Popup.js","components/FileExplorer.js","components/App.js","index.js"],"names":["useLocalStorage","key","initialValue","prekey","useState","json","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","Editor","props","language","onChange","className","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","Popup","trigger","href","link","onClick","setTrigger","FileExplorer","setLanguage","share","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","popup","setPopup","pastebinLink","setPastebinLink","timeout","setTimeout","clearTimeout","a","payload","form","FormData","append","axios","method","url","headers","res","array","split","lastsegment","length","console","log","queryParams","URLSearchParams","window","location","search","pastebinId","get","fetchCodes","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b933b86f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nconst PRE = 'dyte-'\r\nexport const useLocalStorage = (key, initialValue) => {\r\n    const prekey = PRE + key //naming the file\r\n\r\n    //retrieve\r\n    const [value, setValue] = useState(() => {\r\n        const json = localStorage.getItem(prekey)\r\n        if (json != null) return JSON.parse(json)\r\n        return initialValue\r\n    })\r\n\r\n    //store\r\n    useEffect(() => {\r\n        localStorage.setItem(prekey, JSON.stringify(value))\r\n    }, [prekey, value])\r\n    return [value, setValue]\r\n}","import React from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml' //Syntax Highlighting for HTML\r\nimport 'codemirror/mode/css/css'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2' //Editor Component\r\n\r\n\r\n\r\nexport default function Editor(props) {\r\n    const {language,value,onChange} = props\r\n\r\n    const handleChange = (editor, data, value) => onChange(value)\r\n\r\n    return (language)?(\r\n        <div className={`editor-container`}>\r\n           <ControlledEditor\r\n           onBeforeChange={handleChange}\r\n           value={value}\r\n           className=\"code-mirror-wrapper\"\r\n           options={{\r\n               lineWrapping:true,\r\n               lint: true,\r\n               mode: (language==='html')?'xml':language,\r\n               theme: \"material\",\r\n               lineNumbers: true\r\n           }}\r\n           />\r\n        </div>\r\n    ):<></>\r\n}\r\n","import React from 'react'\r\n// Popup to display generated link\r\nexport default function Popup(props) {\r\n    //triggered using props.trigger\r\n    return (props.trigger)? (\r\n        <div className=\"popup\">\r\n            <div className=\"popup-inner\">\r\n                Pastebin Link: <a href={props.link}>{props.link}</a>\r\n                <button \r\n                    className=\"btn-close\" \r\n                    onClick={()=>props.setTrigger(false)}\r\n                >\r\n                    CLOSE\r\n                </button>\r\n            </div>\r\n        </div>\r\n    ) : \"\"\r\n}\r\n","import React from 'react'\r\n\r\nexport default function FileExplorer(props) {\r\n    const {language,setLanguage,share}=props\r\n    return (\r\n        <div className=\"explorer\">\r\n            {/* HTML Button */}\r\n            <button \r\n                className={(language===\"html\")?\"pressed\":\"btn\"} \r\n                onClick={(language==='html')?()=>setLanguage(\"\"):()=>setLanguage(\"html\")}\r\n            >\r\n                HTML\r\n            </button>\r\n\r\n            {/* CSS Button */}\r\n            <button \r\n                className={(language===\"css\")?\"pressed\":\"btn\"} \r\n                onClick={(language==='css')?()=>setLanguage(\"\"):()=>setLanguage(\"css\")}\r\n            >\r\n                CSS\r\n            </button>\r\n\r\n            {/* Js Button */}\r\n            <button \r\n                className={(language===\"javascript\")?\"pressed\":\"btn\"} \r\n                onClick={(language==='javascript')?()=>setLanguage(\"\"):()=>setLanguage(\"javascript\")}\r\n            >\r\n                Js\r\n            </button>\r\n\r\n            {/* Share Code Button */}\r\n            <button \r\n                className=\"btn postbin\" \r\n                onClick={share}\r\n            >\r\n                Share {/*(language===\"html\")?\"HTML\":((language===\"css\")?\"CSS\":\"JavaScript\")*/} Code \r\n            </button>\r\n            {/* <input type=\"text\" className=\"postbinLink\" size=\"50\" placeholder={`Enter ${language} code shared link...`} value={importLink} onChange={e=>setImportLink(e.target.value)}/> */}\r\n            {/* <button className=\"btn postbin submit\" onClick={getCode}> Import {(language===\"html\")?\"HTML\":((language===\"css\")?\"CSS\":\"JavaScript\")} Code </button> */}\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from \"react\";\nimport axios from 'axios' //axios to make API calls\n\nimport { useLocalStorage } from \"../hooks/useLocalStorage\"; //Custom hook to use local storage\n\nimport Editor from \"./Editor\"; //Custom Editor Component\nimport Popup from \"./Popup\"; //Custom Editor Component\nimport FileExplorer from \"./FileExplorer\"; //Custom Editor Component\n\nfunction App() {\n  // Localstorage hooks to store and retreive the code written locally to make it refresh proof\n  const [html, setHtml] = useLocalStorage('html','')\n  const [css, setCss] = useLocalStorage('css','')\n  const [js, setJs] = useLocalStorage('js','')\n\n  //States and use State definitions\n  const [srcDoc,setSrcDoc] = useState('') //document to be rendered live\n  const [language,setLanguage]=useState(\"\") //language editor currently being used\n  const [popup,setPopup]=useState(false) //popup enable\n  const [pastebinLink,setPastebinLink]=useState(\"\") //pastebin link generated\n\n  //Live rendering using React effects which take place when any language code is modified\n  useEffect(()=>{\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n      <html>\n        <body> ${html} </body>\n        <style> ${css} </style>\n        <script> ${js} </script>\n      </html>\n    `)\n    }, 1000) //a 1s timeout to prevent instant\n    return () => clearTimeout(timeout)\n  },[html,css,js])\n\n  //POST request to pastebin, displaying response as popup\n  const share = async () => {\n    try {\n      const payload = {\n        html: html,\n        css: css,\n        js: js\n      }\n      const form = new FormData()\n      form.append('api_dev_key', 'TH8K4U4TC01zWHPuxBAGZqTtP-SZDW1w')\n      form.append('api_option', 'paste')\n      form.append('api_paste_code', JSON.stringify(payload))\n      const res = await axios({\n        method: 'post',\n        url: '/api/api_post.php',\n        data: form,\n        headers: { 'Content-Type': 'multipart/form-data' }\n      })\n\n      const array = res.data.split('/')\n      const lastsegment = array[array.length - 1]\n      setPastebinLink('https://mahavir00.github.io/codepen-clone/?id=' + lastsegment)\n      setPopup(true)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  \n  //GET request to pastebin and loading the code\n  useEffect(() => {\n    const fetchCodes = async () => {\n      try {\n        const queryParams = new URLSearchParams(window.location.search)\n        const pastebinId = queryParams.get('id')\n        const res = await axios.get('/raw/' + pastebinId, {\n          headers: { 'Content-Type': 'multipart/form-data' }\n        })\n        setHtml(res.data.html)\n        setCss(res.data.css)\n        setJs(res.data.js)\n      } catch (error) {\n        console.log(error)\n      }\n    }\n    fetchCodes()\n  }, [])\n\n  return (\n    <div className=\"main\">\n    \n    {/* Popup triggered to share Postbin URL generated */}\n    <Popup trigger={popup} link={pastebinLink} setTrigger={setPopup}/>\n\n    <div className={(language)?\"pane\":\"collapsed\"}>\n      {/* Horizontal File Explorer */}\n      <FileExplorer \n        language={language} \n        setLanguage={setLanguage} \n        share={share}\n      />\n      {/* Single Editor */}\n      <Editor \n        language={language} \n        value={(language===\"html\")?html:((language===\"css\")?css:js)} \n        onChange={(language===\"html\")?setHtml:((language===\"css\")?setCss:setJs)} \n      /> \n    </div>\n\n    {/* Live Render */}\n    <div className={(language)?\"pane\":\"expanded\"}>\n      <iframe srcDoc={srcDoc} title=\"output\" sandbox=\"allow-scripts\" frameBorder=\"0\" width=\"100%\" height=\"100%\"/>\n    </div>\n\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}